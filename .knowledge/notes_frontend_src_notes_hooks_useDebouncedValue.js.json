{"is_source_file": true, "format": "JavaScript", "description": "This file defines a custom React hook named useDebouncedValue that returns a debounced version of a given value, delaying updates until a specified delay has passed without changes.", "external_files": ["react"], "external_methods": ["useEffect", "useState"], "published": ["useDebouncedValue"], "classes": [], "methods": [{"name": "useDebouncedValue(value, delay = 200)", "description": "Custom React hook that returns a debounced version of a state value, updating only after the specified delay period without changes.", "scope": "", "scopeKind": ""}], "calls": ["setTimeout", "clearTimeout"], "search-terms": ["useDebouncedValue", "debounce", "React hook", "useEffect", "useState"], "state": 2, "file_id": 15, "knowledge_revision": 32, "git_revision": "", "ctags": [{"_type": "tag", "name": "useDebouncedValue", "path": "/home/kavia/workspace/code-generation/simple-notes-182131-182140/notes_frontend/src/notes/hooks/useDebouncedValue.js", "pattern": "/^export function useDebouncedValue(value, delay = 200) {$/", "language": "JavaScript", "kind": "function", "signature": "(value, delay = 200)"}], "hash": "89679fb68ac4f57e20e76cd711ff51b1", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/notes/hooks/useDebouncedValue.js", "revision_history": [{"32": ""}]}